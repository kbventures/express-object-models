https://www.codementor.io/@olawalealadeusi896
https://www.codementor.io/@olawalealadeusi896/building-simple-api-with-es6-krn8xx3k6
https://www.codementor.io/@olawalealadeusi896/building-a-simple-api-with-nodejs-expressjs-and-postgresql-db-masuu56t7
https://www.codementor.io/@olawalealadeusi896/building-a-simple-api-with-nodejs-expressjs-postgresql-db-and-jwt-3-mke10c5c5

// Create db
$ node db.js createAllTables

//Start
$ npm run dev-start

// Getting development started
sudo docker-compose up -d

sudo docker-compose exec service  psql -U USER    DETACHED DB
sudo docker-compose exec postgres psql -U mtrade -d mtrade-db
sudo docker-compose exec mtrade-express-postgres psql -U user mtrade-e-p

// POSTGRES URL
postgresql://<USER>:<PASSWORD>@<HOST>:<PORT>/<DB_NAME>
postgresql://user:password@localhost:5433:mtrade-e-p

// CREATE OR DROP Table
node db createTables 
node db dropTables 


// To be sorted
docker exec -it mtrade-app npx dotenv -e .env.local -- prisma db push
sudo: Execute the following command with superuser privileges.
docker-compose: Command-line tool for managing multi-container Docker applications.
exec: Execute a command within a running container.
postgres: Name of the service defined in the Docker Compose file, representing the PostgreSQL database.
psql -U mtrade -d mtrade-db: Command to run within the container:
psql: PostgreSQL interactive terminal.
-U mtrade: Specifies the PostgreSQL user as mtrade.
-d mtrade-db: Specifies the PostgreSQL database as mtrade-db.

